# Below code is Dictionary implementation but it words only for exact word match.
# It needs a bit improvement. This code can guide through DB connection steps and
# how to play with data

from difflib import get_close_matches
import pypyodbc

username = '<username>'
password = '<password>'
ServerName = '<Server Name>'
MSQLDatabase = '<db name>'

conn = pypyodbc.connect("DRIVER={{SQL Server}};SERVER={0}; database={1}; \
       trusted_connection=yes;UID={2};PWD={3}".format(ServerName, MSQLDatabase, username, password))

cursor = conn.cursor()
#query = cursor.execute("select * from EnglishDictionary")
#data = query.fetchall()



def search_string(w):
    i = 0
    word = w.lower()
    #print(data)
    if len(data) == 0:
        print("Word match did not found in dictionary, please try other word.")
        return ''
    while i < len(data):
        #print(i)
        if word in data[i]:
            return data[i][1]
        elif word.title() in data[i]:
            return data[i][1]
        elif word.upper() in data[i]:
            return data[i][1]
        elif len(get_close_matches(word, data[i][0])) > 0:
            print(get_close_matches(word, data[i][0]))
            user_input = input("Do you mean %s? \nPress Y/y if Yes, N/n if No. " % get_close_matches(word, data[i][0],
                                                                                                     cutoff=0.8)[0])

            if user_input == 'Y' or user_input == 'y':
                return data[i][1]
            elif user_input == 'N' or user_input == 'n':
                print('Please try again with correct word.')
                return ''
            else:
                print("Incorrect response received form the user.\nExiting!")
                return ''
        else:
             print("Did not get your query, try again.")
             return ''
        i += 1


#word = search_string(input("Enter words: "))
input_string = input("Enter words: ")
sql_string = input_string + '%'
query = cursor.execute("select * from EnglishDictionary where upper(word) like upper('%s')" % sql_string)
data = query.fetchall()
word = search_string(input_string)

if len(word) > 0:
    if isinstance(word, str):
        result = word.split(',')
        for a in result:
            print('> ' + a.strip(' "|[|"|]'))
else:
    print('Thank you!')
